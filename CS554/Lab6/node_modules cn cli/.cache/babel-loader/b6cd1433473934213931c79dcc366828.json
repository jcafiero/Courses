{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/EditQuote.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    quotes {\\n      id\\n      quote\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nmutation updateQuote(\\n  $id: String!,\\n  $quote: String!\\n) {\\n  updateQuote(\\n    input: {\\n      id: $id,\\n      quote: $quote\\n    }\\n  ) {\\n    id\\n    quote\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport ReactModal from \"react-modal\";\nimport gql from 'graphql-tag';\nReactModal.setAppElement(\"#root\");\nconst editQuoteQuery = gql(_templateObject());\nconst getAll = gql(_templateObject2());\n\nclass EditQuote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditQuote: this.props.isOpen,\n      quote: this.props.quote\n    };\n    this.handleCloseEditQuote = this.handleCloseEditQuote.bind(this);\n  }\n\n  handleCloseEditQuote() {\n    this.setState({\n      showEditQuote: false,\n      quote: null\n    });\n    this.props.handleClose();\n  }\n\n  render() {\n    let quote;\n    let body;\n\n    if (this.props.modal === \"editQuote\") {\n      body = React.createElement(Mutation, {\n        mutation: editQuoteQuery,\n        update: (cache, {\n          data: {\n            updateQuote\n          }\n        }) => {\n          const _cache$readQuery = cache.readQuery({\n            query: getAll\n          }),\n                quotes = _cache$readQuery.quotes;\n\n          cache.writeQuery({\n            query: getAll,\n            data: {\n              quotes: quotes.filter(q => q.id == this.state.quote.id)\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, (updateQuote, {\n        data\n      }) => React.createElement(\"form\", {\n        className: \"form\",\n        id: \"update-quote\",\n        onSubmit: e => {\n          console.log(quote.value);\n          e.preventDefault();\n          updateQuote({\n            variables: {\n              id: this.props.employee.id,\n              quote: quote.value\n            }\n          });\n          quote.value = \"\";\n          this.setState({\n            showEditQuote: false\n          });\n          alert(\"Quote Updated\");\n          this.props.handleClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Quote:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        ref: node => {\n          quote = node;\n        },\n        defaultValue: this.props.quote,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button add-button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Update Quote\")));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(ReactModal, {\n      name: \"updateQuote\",\n      isOpen: this.state.showEditQuote,\n      contentLabel: \"Edit Quote\",\n      className: \"quote-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, body, React.createElement(\"button\", {\n      className: \"btn cancel-button\",\n      onClick: this.handleCloseEditQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\n\nexport default EditQuote;","map":{"version":3,"sources":["/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/EditQuote.js"],"names":["React","Component","Mutation","ReactModal","gql","setAppElement","editQuoteQuery","getAll","EditQuote","constructor","props","state","showEditQuote","isOpen","quote","handleCloseEditQuote","bind","setState","handleClose","render","body","modal","cache","data","updateQuote","readQuery","query","quotes","writeQuery","filter","q","id","e","console","log","value","preventDefault","variables","employee","alert","node"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport ReactModal from \"react-modal\";\nimport gql from 'graphql-tag';\n\n\nReactModal.setAppElement(\"#root\");\n\nconst editQuoteQuery = gql`\nmutation updateQuote(\n  $id: String!,\n  $quote: String!\n) {\n  updateQuote(\n    input: {\n      id: $id,\n      quote: $quote\n    }\n  ) {\n    id\n    quote\n  }\n}\n`;\n\nconst getAll = gql`\n  query {\n    quotes {\n      id\n      quote\n    }\n  }\n`;\n\nclass EditQuote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditQuote: this.props.isOpen,\n      quote: this.props.quote\n    };\n    this.handleCloseEditQuote = this.handleCloseEditQuote.bind(this);\n  }\n\n  handleCloseEditQuote() {\n    this.setState({ showEditQuote: false, quote: null });\n    this.props.handleClose();\n  }\n\n  render() {\n    let quote;\n    let body;\n    if (this.props.modal === \"editQuote\") {\n      body = (\n        <Mutation \n          mutation={editQuoteQuery}\n          update={(cache, { data: { updateQuote } }) => {\n            const { quotes } = cache.readQuery({\n              query: getAll\n            });\n            cache.writeQuery({\n              query: getAll,\n              data: {\n                quotes: quotes.filter(\n                  q => q.id == this.state.quote.id\n                )\n              }\n            });\n          }}\n        >\n          {(updateQuote, { data }) => (\n            <form\n              className=\"form\"\n              id=\"update-quote\"\n              onSubmit={e => {\n                console.log(quote.value);\n                e.preventDefault();\n                updateQuote({\n                  variables: {\n                    id: this.props.employee.id,\n                    quote: quote.value\n                  }\n                });\n                quote.value = \"\";\n                this.setState({ showEditQuote: false });\n                alert(\"Quote Updated\");\n                this.props.handleClose();\n              }}\n            >\n              <div className=\"form-group\">\n                <label>\n                  Quote:\n                  <br />\n                  <input\n                    ref={node => {\n                      quote = node;\n                    }}\n                    defaultValue={this.props.quote}\n                    autoFocus={true}\n                  />\n                </label>\n              </div>\n              <br />\n\n              \n              <br />\n              <br />\n              <button className=\"button add-button\" type=\"submit\">\n                Update Quote\n              </button>\n            </form>\n          )}\n        </Mutation>\n      );\n    }\n\n    return (\n      <div>\n        <ReactModal\n          name=\"updateQuote\"\n          isOpen={this.state.showEditQuote}\n          contentLabel=\"Edit Quote\"\n          className=\"quote-modal\"\n        >\n          {body}\n          <button className=\"btn cancel-button\"\n            onClick={this.handleCloseEditQuote}\n          >\n            Cancel\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nexport default EditQuote;\n"]},"metadata":{},"sourceType":"module"}
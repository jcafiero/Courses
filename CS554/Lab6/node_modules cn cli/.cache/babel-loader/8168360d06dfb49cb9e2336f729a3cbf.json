{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/Quotes.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    quotes {\\n      id\\n      quote\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag'; // import { buildQueryFromSelectionSet } from 'apollo-utilities';\n\nimport AddQuote from './AddQuote';\nimport DeleteQuote from './DeleteQuote';\nimport EditQuote from './EditQuote';\nconst getAll = gql(_templateObject());\n\nclass Quotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddQuote: false,\n      showDeleteQuote: false,\n      showEditQuote: false,\n      editQuote: null,\n      deleteQuote: null\n    };\n    this.handleOpenAddQuote = this.handleOpenAddQuote.bind(this);\n    this.handleOpenDeleteQuote = this.handleOpenDeleteQuote.bind(this);\n    this.handleOpenEditQuote = this.handleOpenEditQuote.bind(this);\n    this.handleCloseQuotes = this.handleCloseQuotes.bind(this);\n  }\n\n  handleCloseQuotes() {\n    this.setState({\n      showAddQuote: false,\n      showDeleteQuote: false,\n      showEditQuote: false\n    });\n  }\n\n  handleOpenAddQuote() {\n    this.setState({\n      showAddQuote: true\n    });\n  }\n\n  handleOpenDeleteQuote(quote) {\n    this.setState({\n      showDeleteQuote: true,\n      deleteQuote: quote\n    });\n  }\n\n  handleOpenEditQuote(quote) {\n    this.setState({\n      showEditQuote: true,\n      editQuote: quote\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.handleOpenAddQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Add Quote\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Query, {\n      query: getAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, ({\n      data\n    }) => {\n      if (!data) {\n        console.log(data);\n        return null;\n      }\n\n      const quotes = data.quotes;\n\n      if (!quotes) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, quotes.map(quote => {\n        return React.createElement(\"div\", {\n          className: \"quote\",\n          key: quote.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, quote.quote, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-warning\",\n          onClick: () => {\n            this.handleOpenEditQuote(quote);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: () => {\n            this.handleOpenDeleteQuote(quote);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Delete\"));\n      }));\n    }), this.state && this.state.showAddQuote && React.createElement(AddQuote, {\n      isOpen: this.state.showAddQuote,\n      handleClose: this.handleCloseQuotes,\n      modal: \"addQuote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.state && this.state.showDeleteQuote && React.createElement(DeleteQuote, {\n      isOpen: this.state.showDeleteQuote,\n      handleClose: this.handleCloseQuotes,\n      deleteQuote: this.state.deleteQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), this.state && this.state.showEditQuote && React.createElement(EditQuote, {\n      isOpen: this.state.showEditQuote,\n      quote: this.state.editQuote,\n      handleClose: this.handleCloseQuotes,\n      modal: \"editQuote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Quotes;","map":{"version":3,"sources":["/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/Quotes.js"],"names":["React","Component","Query","gql","AddQuote","DeleteQuote","EditQuote","getAll","Quotes","constructor","props","state","showAddQuote","showDeleteQuote","showEditQuote","editQuote","deleteQuote","handleOpenAddQuote","bind","handleOpenDeleteQuote","handleOpenEditQuote","handleCloseQuotes","setState","quote","render","data","console","log","quotes","map","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n// import { buildQueryFromSelectionSet } from 'apollo-utilities';\n\nimport AddQuote from './AddQuote';\nimport DeleteQuote from './DeleteQuote';\nimport EditQuote from './EditQuote';\n\nconst getAll = gql`\n  query {\n    quotes {\n      id\n      quote\n    }\n  }\n`;\n\nclass Quotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddQuote: false,\n      showDeleteQuote: false,\n      showEditQuote: false,\n      editQuote: null,\n      deleteQuote: null\n    };\n    this.handleOpenAddQuote = this.handleOpenAddQuote.bind(this);\n    this.handleOpenDeleteQuote = this.handleOpenDeleteQuote.bind(this);\n    this.handleOpenEditQuote = this.handleOpenEditQuote.bind(this);\n    this.handleCloseQuotes = this.handleCloseQuotes.bind(this);\n  }\n  handleCloseQuotes() {\n    this.setState({\n      showAddQuote: false,\n      showDeleteQuote: false,\n      showEditQuote: false\n    });\n  }\n  handleOpenAddQuote() {\n    this.setState({ showAddQuote: true });\n  }\n  handleOpenDeleteQuote(quote) {\n    this.setState({\n      showDeleteQuote: true,\n      deleteQuote: quote\n    });\n  }\n  handleOpenEditQuote(quote) {\n    this.setState({\n      showEditQuote: true,\n      editQuote: quote\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n      <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleOpenAddQuote}>\n        Add Quote\n      </button>\n      <br/>\n      <Query query={getAll}>\n        {({ data }) => {\n          if (!data) {\n            console.log(data);\n            return null;\n          }\n          const { quotes } = data;\n          if (!quotes) {\n            return null;\n          }\n          return (\n            <div>\n              {quotes.map(quote => {\n                return (<div className=\"quote\" key={quote.id}>\n                  {quote.quote}\n                  <button type=\"button\" className=\"btn btn-warning\" onClick={() => {\n                    this.handleOpenEditQuote(quote);\n                  }}>\n                    Edit\n                  </button>\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\n                    this.handleOpenDeleteQuote(quote);\n                  }}>\n                    Delete\n                  </button>\n                </div>)\n              })}\n            </div>\n          )\n        }}\n      </Query>\n\n      {this.state && this.state.showAddQuote && (\n        <AddQuote\n          isOpen={this.state.showAddQuote}\n          handleClose={this.handleCloseQuotes}\n          modal=\"addQuote\"\n        />\n      )}\n      {this.state && this.state.showDeleteQuote && (\n        <DeleteQuote \n          isOpen={this.state.showDeleteQuote}\n          handleClose={this.handleCloseQuotes}\n          deleteQuote={this.state.deleteQuote}\n        />\n      )}\n      {this.state && this.state.showEditQuote && (\n        <EditQuote \n          isOpen={this.state.showEditQuote}\n          quote={this.state.editQuote}\n          handleClose={this.handleCloseQuotes}\n          modal=\"editQuote\"\n        />\n      )}\n    </div>\n    );\n  }\n}\n\nexport default Quotes;"]},"metadata":{},"sourceType":"module"}
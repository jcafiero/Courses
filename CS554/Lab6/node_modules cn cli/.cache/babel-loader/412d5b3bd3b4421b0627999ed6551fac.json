{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/EditQuote.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    quotes {\\n      id\\n      quote\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nmutation updateQuote(\\n  $id: String!,\\n  $quote: String!\\n) {\\n  updateQuote(\\n    input: {\\n      id: $id,\\n      quote: $quote\\n    }\\n  ) {\\n    id\\n    quote\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport ReactModal from \"react-modal\";\nimport gql from 'graphql-tag';\nReactModal.setAppElement(\"#root\");\nconst editQuoteQuery = gql(_templateObject());\nconst getAll = gql(_templateObject2());\n\nclass EditQuote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditQuote: this.props.isOpen,\n      quote: this.props.quote\n    };\n    this.handleCloseEditQuote = this.handleCloseEditQuote.bind(this);\n  }\n\n  handleCloseEditQuote() {\n    this.setState({\n      showEditQuote: false,\n      quote: null\n    });\n    this.props.handleClose();\n  }\n\n  render() {\n    let quote;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ReactModal, {\n      name: \"editQuote\",\n      isOpen: this.state.showEditQuote,\n      contentLabel: \"Edit Quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Mutation, {\n      mutation: editQuoteQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, (editQuery, {\n      data\n    }) => React.createElement(\"form\", {\n      className: \"form\",\n      id: \"edit-quote\",\n      onSubmit: e => {\n        console.log(quote.value);\n        e.preventDefault();\n        editQuote({\n          variables: {\n            id: this.props.employee.id,\n            quote: quote.value\n          }\n        });\n        quote.value = \"\";\n        this.setState({\n          showEditQuote: false\n        });\n        alert(\"Quote Updated\");\n        this.props.handleClose();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Quote:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: node => {\n        quote = node;\n      },\n      defaultValue: this.props.quote.quote,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button add-button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Update Quote\"))), React.createElement(\"button\", {\n      className: \"button cancel-button\",\n      onClick: this.handleCloseEditQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\n\nexport default EditQuote;","map":{"version":3,"sources":["/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/EditQuote.js"],"names":["React","Component","Query","Mutation","ReactModal","gql","setAppElement","editQuoteQuery","getAll","EditQuote","constructor","props","state","showEditQuote","isOpen","quote","handleCloseEditQuote","bind","setState","handleClose","render","editQuery","data","e","console","log","value","preventDefault","editQuote","variables","id","employee","alert","node"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport ReactModal from \"react-modal\";\nimport gql from 'graphql-tag';\n\n\nReactModal.setAppElement(\"#root\");\n\nconst editQuoteQuery = gql`\nmutation updateQuote(\n  $id: String!,\n  $quote: String!\n) {\n  updateQuote(\n    input: {\n      id: $id,\n      quote: $quote\n    }\n  ) {\n    id\n    quote\n  }\n}\n`;\n\nconst getAll = gql`\n  query {\n    quotes {\n      id\n      quote\n    }\n  }\n`;\n\nclass EditQuote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditQuote: this.props.isOpen,\n      quote: this.props.quote\n    };\n    this.handleCloseEditQuote = this.handleCloseEditQuote.bind(this);\n  }\n\n  handleCloseEditQuote() {\n    this.setState({ showEditQuote: false, quote: null });\n    this.props.handleClose();\n  }\n\n  render() {\n    let quote;\n    return (\n      <div>\n        {/*Edit Employee Modal - NOT DONE YET */}\n        <ReactModal\n          name=\"editQuote\"\n          isOpen={this.state.showEditQuote}\n          contentLabel=\"Edit Quote\"\n        >\n          <Mutation mutation={editQuoteQuery}>\n            {(editQuery, { data }) => (\n              <form\n                className=\"form\"\n                id=\"edit-quote\"\n                onSubmit={e => {\n                  console.log(quote.value);\n                  e.preventDefault();\n                  editQuote({\n                    variables: {\n                      id: this.props.employee.id,\n                      quote: quote.value\n                    }\n                  });\n                  quote.value = \"\";\n                  this.setState({ showEditQuote: false });\n                  alert(\"Quote Updated\");\n                  this.props.handleClose();\n                }}\n              >\n                <div className=\"form-group\">\n                  <label>\n                    Quote:\n                    <br />\n                    <input\n                      ref={node => {\n                        quote = node;\n                      }}\n                      defaultValue={this.props.quote.quote}\n                      autoFocus={true}\n                    />\n                  </label>\n                </div>\n                <br />\n\n                \n                <br />\n                <br />\n                <button className=\"button add-button\" type=\"submit\">\n                  Update Quote\n                </button>\n              </form>\n            )}\n          </Mutation>\n          <button\n            className=\"button cancel-button\"\n            onClick={this.handleCloseEditQuote}\n          >\n            Cancel\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nexport default EditQuote;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/Quotes.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    quotes {\\n      id\\n      quote\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { buildQueryFromSelectionSet } from 'apollo-utilities';\nimport AddQuote from './AddQuote';\nconst getAll = gql(_templateObject());\n\nclass Quotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddQuote: false,\n      showDeleteQuote: false,\n      showEditQuote: false\n    };\n    this.handleOpenAddQuote = this.handleOpenAddQuote.bind(this);\n  }\n\n  handleCloseQuotes() {\n    this.setState({\n      showAddQuote: false,\n      showDeleteQuote: false,\n      showEditQuote: false\n    });\n  }\n\n  handleOpenAddQuote() {\n    this.setState({\n      showAddQuote: true\n    });\n  }\n\n  handleOpenDeleteQuote(quote) {\n    this.setState({\n      showDeleteQuote: true,\n      deleteQuote: quote\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.handleOpenAddQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Add Quote\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Query, {\n      query: getAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, ({\n      data\n    }) => {\n      if (!data) {\n        console.log(data);\n        return null;\n      }\n\n      const quotes = data.quotes;\n\n      if (!quotes) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, quotes.map(quote => {\n        return React.createElement(\"div\", {\n          className: \"quote\",\n          key: quote.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, quote.quote, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-warning\",\n          onClick: () => {\n            this.handleOpenEditQuote(quote);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: () => {\n            this.handleOpenDeleteQuote(quote);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Delete\"));\n      }));\n    }), this.state && this.state.showAddQuote && React.createElement(AddQuote, {\n      isOpen: this.state.showAddQuote,\n      handleClose: this.handleCloseQuote,\n      modal: \"addQuote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Quotes;","map":{"version":3,"sources":["/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/Quotes.js"],"names":["React","Component","Query","gql","buildQueryFromSelectionSet","AddQuote","getAll","Quotes","constructor","props","state","showAddQuote","showDeleteQuote","showEditQuote","handleOpenAddQuote","bind","handleCloseQuotes","setState","handleOpenDeleteQuote","quote","deleteQuote","render","data","console","log","quotes","map","id","handleOpenEditQuote","handleCloseQuote"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { buildQueryFromSelectionSet } from 'apollo-utilities';\n\nimport AddQuote from './AddQuote';\n\nconst getAll = gql`\n  query {\n    quotes {\n      id\n      quote\n    }\n  }\n`;\n\nclass Quotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddQuote: false,\n      showDeleteQuote: false,\n      showEditQuote: false\n    };\n    this.handleOpenAddQuote = this.handleOpenAddQuote.bind(this);\n  }\n  handleCloseQuotes() {\n    this.setState({\n      showAddQuote: false,\n      showDeleteQuote: false,\n      showEditQuote: false\n    });\n  }\n\n  handleOpenAddQuote() {\n    this.setState({ showAddQuote: true });\n  }\n\n  handleOpenDeleteQuote(quote) {\n    this.setState({\n      showDeleteQuote: true,\n      deleteQuote: quote\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"container\">\n      <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleOpenAddQuote}>\n        Add Quote\n      </button>\n      <br/>\n      <Query query={getAll}>\n        {({ data }) => {\n          if (!data) {\n            console.log(data);\n            return null;\n          }\n          const { quotes } = data;\n          if (!quotes) {\n            return null;\n          }\n          return (\n            <div>\n              {quotes.map(quote => {\n                return (<div className=\"quote\" key={quote.id}>\n                  {quote.quote}\n                  <button type=\"button\" className=\"btn btn-warning\" onClick={() => {\n                    this.handleOpenEditQuote(quote);\n                  }}>\n                    Edit\n                  </button>\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\n                    this.handleOpenDeleteQuote(quote);\n                  }}>\n                    Delete\n                  </button>\n                </div>)\n              })}\n            </div>\n          )\n        }}\n      </Query>\n\n      {this.state && this.state.showAddQuote && (\n        <AddQuote\n          isOpen={this.state.showAddQuote}\n          handleClose={this.handleCloseQuote}\n          modal=\"addQuote\"\n        />\n      )}\n    </div>\n    );\n  }\n}\n\nexport default Quotes;"]},"metadata":{},"sourceType":"module"}
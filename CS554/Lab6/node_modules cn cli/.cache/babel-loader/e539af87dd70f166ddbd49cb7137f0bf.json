{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/Quotes.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    quotes {\\n      id\\n      quote\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { buildQueryFromSelectionSet } from 'apollo-utilities';\nconst getAll = gql(_templateObject());\n\nclass Quotes extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.handleOpenAddQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Add Quote\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Query, {\n      query: getAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, ({\n      data\n    }) => {\n      if (!data) {\n        console.log(data);\n        return null;\n      }\n\n      const quotes = data.quotes;\n\n      if (!quotes) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, quotes.map(quote => {\n        return React.createElement(\"div\", {\n          className: \"quote\",\n          key: quote.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, quote.quote);\n      }));\n    }));\n  }\n\n}\n\nexport default Quotes;","map":{"version":3,"sources":["/Users/jcafiero/Code/CS554/Lab6/ChuckNorris/client/src/components/Quotes.js"],"names":["React","Component","Query","gql","buildQueryFromSelectionSet","getAll","Quotes","render","handleOpenAddQuote","data","console","log","quotes","map","quote","id"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AAEA,MAAMC,MAAM,GAAGF,GAAH,mBAAZ;;AASA,MAAMG,MAAN,SAAqBL,SAArB,CAA+B;AAC7BM,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKC,kBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKA,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEI,MAAAA;AAAF,KAAD,KAAc;AACb,UAAI,CAACA,IAAL,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,eAAO,IAAP;AACD;;AAJY,YAKLG,MALK,GAKMH,IALN,CAKLG,MALK;;AAMb,UAAI,CAACA,MAAL,EAAa;AACX,eAAO,IAAP;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MAAM,CAACC,GAAP,CAAWC,KAAK,IAAI;AACnB,eAAQ;AAAK,UAAA,SAAS,EAAC,OAAf;AAAuB,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACLD,KAAK,CAACA,KADD,CAAR;AAID,OALA,CADH,CADF;AAUD,KApBH,CALA,CADF;AA8BD;;AAhC4B;;AAmC/B,eAAeR,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { buildQueryFromSelectionSet } from 'apollo-utilities';\n\nconst getAll = gql`\n  query {\n    quotes {\n      id\n      quote\n    }\n  }\n`;\n\nclass Quotes extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n      <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleOpenAddQuote}>\n        Add Quote\n      </button>\n      <br/>\n      <Query query={getAll}>\n        {({ data }) => {\n          if (!data) {\n            console.log(data);\n            return null;\n          }\n          const { quotes } = data;\n          if (!quotes) {\n            return null;\n          }\n          return (\n            <div>\n              {quotes.map(quote => {\n                return (<div className=\"quote\" key={quote.id}>\n                  {quote.quote}\n\n                </div>)\n              })}\n            </div>\n          )\n        }}\n      </Query>\n    </div>\n    );\n  }\n}\n\nexport default Quotes;"]},"metadata":{},"sourceType":"module"}